name: Web Test on Multiple Containers

on:
  repository_dispatch:
    types:
      - trigger-web-test
  workflow_dispatch:
    inputs:
      Environment:
        description: 'Environment'
        required: true
        default: 'brightideatest.com'
        type: choice
        options:
          - brightideatest.com
          - brightideasandbox.com
      Mvn_Group:
        description: 'Mvn Group'
        required: true
        default: 'Smoke'
        type: choice
        options:
          - Smoke
          - DockerSet
          - OldRulesModalRegression
          - TestGroup
      Run_Headless:
        description: 'Run Headless'
        required: true
        default: false
        type: boolean
      Containers:
        description: 'Number of Containers/Parallel Threads'
        required: true
        default: '5'
        type: choice
        options:
          - '1'
          - '3'
          - '5'
          - '7'
          - '8'
          - '9'
          - '10'

jobs:
  run-group-of-web-tests-in-grid:
    runs-on: ubuntu-latest

    steps:
      - name: pull the project into the runner
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # You can use 'zulu', 'adopt', or other distributions that provide OpenJDK
          java-version: '21.0.3'
          cache: maven

      - name: Create Docker network
        run: docker network create grid

      - name: Start Selenium Grid Hub
        run: |
          # Get container count, default to 5 if not set
          CONTAINER_COUNT="${{ github.event.inputs.Containers || github.event.client_payload.Containers || '5' }}"
      
          docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub \
            -e GRID_MAX_SESSION=$CONTAINER_COUNT \
            -e GRID_TIMEOUT=120 \
            selenium/hub:latest

      - name: Start Selenium Chrome Nodes
        run: |
          # Get container count, default to 5 if not set
          CONTAINER_COUNT="${{ github.event.inputs.Containers || github.event.client_payload.Containers || '5' }}"
          echo "Starting $CONTAINER_COUNT Chrome nodes"      
          
          for i in $(seq 1 $CONTAINER_COUNT); do
            docker run -d --net grid \
              -e SE_EVENT_BUS_HOST=selenium-hub \
              -e SE_NODE_MAX_SESSIONS=1 \
              -e SE_NODE_SESSION_TIMEOUT=180 \
              --shm-size="4g" \
              -e SE_JAVA_OPTS="-Xmx1024m" \
              selenium/node-chrome:latest
          done
          # Wait for nodes to register properly
          sleep 30
          # Verify nodes are registered
          curl -s http://localhost:4444/status | jq '.nodes | length'        

      - name: Check Grid Status
        run: |
          # Get container count, default to 5 if not set
          CONTAINER_COUNT="${{ github.event.inputs.Containers || github.event.client_payload.Containers || '5' }}"
    
          curl -s http://localhost:4444/status | jq .
          echo "Ensuring Grid is ready..."
          for i in {1..6}; do
            NODE_COUNT=$(curl -s http://localhost:4444/status | jq '.value.nodes | length')
            echo "Current node count: $NODE_COUNT"
            if [ "$NODE_COUNT" -ge $CONTAINER_COUNT ]; then
              echo "Grid is ready with $NODE_COUNT nodes"
              break
            fi
            echo "Waiting for nodes to register... Attempt $i of 6"
            sleep 10
          done

      - name: Run Web Tests via Maven
        run: |
          export MAVEN_OPTS="-Xmx2g -XX:+HeapDumpOnOutOfMemoryError"

          # Get container count, default to 5 if not set
          CONTAINER_COUNT="${{ github.event.inputs.Containers || github.event.client_payload.Containers || '5' }}"

          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            mvn clean test \
              -Denvironment.url="${{ github.event.inputs.Environment }}" \
              -Dgroups="${{ github.event.inputs.Mvn_Group }}" \
              -Dheadless=${{ github.event.inputs.Run_Headless }} \
              -Dselenium.grid.url="http://localhost:4444" \
              -Dwebdriver.timeouts.implicitlywait=30 \
              -Dwebdriver.remote.quietExceptions=false \
              -DforkCount=$CONTAINER_COUNT \
              -DreuseForks=true \
              -Dparallel=classes \
              site          
          elif [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            mvn clean test \
              -Denvironment.url="${{ github.event.client_payload.Environment }}" \
              -Dgroups="${{ github.event.client_payload.Mvn_Group }}" \
              -Dheadless=${{ github.event.client_payload.Run_Headless }} \
              -Dselenium.grid.url="http://localhost:4444" \
              -Dwebdriver.timeouts.implicitlywait=30 \
              -Dwebdriver.remote.quietExceptions=false \
              -DforkCount=$CONTAINER_COUNT \
              -DreuseForks=true \
              -Dparallel=classes \
              site         
          fi

      - name: Upload Maven Site Report
        uses: actions/upload-artifact@v4
        with:
          name: maven-site-report
          path: target/site

      - name: Publish Test Report
        if: success() || failure()
        uses: scacap/action-surefire-report@v1
        with:
          report_paths: '**/target/surefire-reports/*.xml'

      - name: Upload surefire-reports-Screenshots-ConsoleLog-Dom
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-logs-Screenshots-ConsoleLog-Dom
          path: '**/target/surefire-reports'
          if-no-files-found: warn
          retention-days: 2

      - name: Collect Docker logs
        if: always()
        run: |
          mkdir -p docker-logs
          docker logs selenium-hub > docker-logs/selenium-hub.log 2>&1
          for container in $(docker ps -q --filter ancestor=selenium/node-chrome:latest); do
            docker logs $container > docker-logs/node-$container.log 2>&1
          done

      - name: Upload Docker logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docker-logs
          path: docker-logs/
          retention-days: 2

      - name: Clean up Docker containers
        if: always()
        run: |
          docker rm -f $(docker ps -aq)
          docker network rm grid
